from src.transform import normalize_columns, to_silver, to_gold
from src.ingest import tag_lineage, concat_bronze
from src.validate import basic_checks, veracity_score

# ... despu√©s de crear silver
if all_errors == []:  # si no hubo errores cr√≠ticos
    st.subheader("üìä Tabla Silver (partner √ó mes)")
    st.dataframe(silver)

    # KPIs simples
    st.metric("Total amount (‚Ç¨)", f"{silver['total_amount'].sum():,.2f}")
    st.metric("Partners √∫nicos", silver["partner"].nunique())

    # Chart
    st.bar_chart(silver, x="month", y="total_amount")

    # ‚û°Ô∏è Nueva capa GOLD
    gold = to_gold(silver)
    st.subheader("üèÜ Tabla Gold (partner √ó a√±o)")
    st.dataframe(gold)

    # Descargas
    st.download_button(
        "‚¨áÔ∏è Descargar bronze.csv",
        bronze.to_csv(index=False).encode("utf-8"),
        file_name="bronze.csv",
        mime="text/csv",
    )
    st.download_button(
        "‚¨áÔ∏è Descargar silver.csv",
        silver.to_csv(index=False).encode("utf-8"),
        file_name="silver.csv",
        mime="text/csv",
    )
    st.download_button(
        "‚¨áÔ∏è Descargar gold.csv",
        gold.to_csv(index=False).encode("utf-8"),
        file_name="gold.csv",
        mime="text/csv",
    )
